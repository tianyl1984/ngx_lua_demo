http {
    include       mime.types;
    default_type  application/octet-stream;
    lua_shared_dict shared_data 1m;
    lua_shared_dict s_data 1m;
	init_by_lua_file code/lua/init.lua;
	
	lua_package_path "D:\ngx_openresty-1.9.7.1-win32\lualib\resty\?.lua;;code\lua\?.lua";
	lua_package_cpath "D:\ngx_openresty-1.9.7.1-win32\lualib\?.so;;";
	
	server{
		listen 8080;
		charset utf8;
		
		#set $template_location "/templates";
		set $template_root "D:\\ngx_openresty-1.9.7.1-win32\\code\\templates";
		
		location /hello {
			default_type text/html;
			content_by_lua '
	  			ngx.say("<p>Hello Nginx+lua!!!</p>")
			';
		}
		
		location /test {
			default_type text/html;
			lua_code_cache off;
			charset utf-8;
			content_by_lua_file code/lua/test.lua;
		}
		
		location ~ /req/(\d+)/(\d+) {
			default_type text/html;
			charset gbk;
			lua_code_cache off;
			lua_need_request_body on;
			set $a $1;
			set $b $host;
			content_by_lua_file code/lua/req.lua;
			echo_after_body "ngx.var.b $b <hr>";
		}
		
		location ~ /ngx_stage {
			default_type text/html;
			charset gbk;
			lua_code_cache on;
			set_by_lua $num '
				local uri_args = ngx.req.get_uri_args()
				local i = uri_args["i"] or 0
				local j = uri_args["j"] or 0
				return i + j
			';
			content_by_lua_file code/lua/ngx_stage.lua;
			echo_after_body "result: $num <hr>";
		}
		
		location ~ /module {
			default_type text/html;
			content_by_lua '
				local count = require("count")
				count.addCount()
			';
		}
		
		location ~ /mysql {
			default_type text/html;
			lua_code_cache off;
			content_by_lua_file code/lua/mysql_client.lua;
		}
		
		location ~ /httpClient {
			lua_code_cache off;
			resolver 223.5.5.5;#dns server
			content_by_lua_file code/lua/http_client.lua;
		}
		
		location ~ /cjson {
		    default_type text/html;
			lua_code_cache off;
			content_by_lua_file code/lua/cjson_demo.lua;
		}
		
		location ~ /temp {
			charset gbk;
			default_type text/html;
			lua_code_cache off;
			content_by_lua_file code/lua/temp_demo.lua;
		}

		location ^~ /proxyPass {
			lua_code_cache off;
			access_by_lua_file code/lua/accessProxyPass.lua;
			proxy_pass http://127.0.0.1:8082/tools;
		}
	}
}